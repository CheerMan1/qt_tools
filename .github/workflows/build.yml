name: build and release
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]  # 三个平台
#        os: [windows-latest, ubuntu-latest, macos-latest]  # 三个平台
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7.4'

      - name: Cache pip dependencies
        id: cache-pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        if: steps.cache-pip.outputs.cache-hit != 'true'
        run: |
          pip install -r requirements.txt
          pip list

      - name: Build executable
        run: |
          pyinstaller -F countdown_dialog.py
          ls
          cd dist
          ls
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID
          asset_path: ./dist/countdown_dialog.exe
          asset_name: countdown_dialog.exe
          asset_content_type: application/x-msdownload
          

